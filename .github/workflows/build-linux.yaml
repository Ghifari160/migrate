name: Build Linux binary
on:
  workflow_call:
    inputs:
      goarch:
        type: string
        required: true
        description: "GOARCH"
      archid:
        type: string
        required: true
        description: "Arch ID"
      production:
        type: boolean
        description: "Run in production mode"
      version:
        type: string
        description: "Version (without leading \"v\")"
      year:
        type: string
        description: "Copyright year"
jobs:
  build-linux:
    name: Build Linux binary
    runs-on: ubuntu-latest
    steps:
    - name: Setup source repo
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: "^1.19.3"
    - name: Run prerelease script
      if: ${{inputs.production}}
      run: |
        go run ./scripts/prerelease -noninteractive \
          -ver ${{inputs.version}} -copyyear ${{inputs.year}}
    - name: Build Linux binary (${{inputs.archid}})
      if: ${{!inputs.production}}
      run: GOOS=linux GOARCH=${{inputs.goarch}} go build -o out/migrate main.go
    - name: Build Linux RELEASE binary (${{inputs.archid}})
      if: ${{inputs.production}}
      run: GOOS=linux GOARCH=${{inputs.goarch}} go build -tags prod -o out/migrate main.go
    - name: Creat tarball
      run: cd out && tar -zcvf ../migrate-linux_${{inputs.archid}}.tar.gz . && cd ..
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: migrate-linux_${{inputs.archid}}.tar.gz
        path: migrate-linux_${{inputs.archid}}.tar.gz
